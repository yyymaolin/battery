{"remainingRequest":"D:\\Desktop\\Django\\fe_admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Desktop\\Django\\fe_admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Desktop\\Django\\fe_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Desktop\\Django\\fe_admin\\node_modules\\vue-image-crop-upload\\upload-2.vue?vue&type=template&id=25292217","dependencies":[{"path":"D:\\Desktop\\Django\\fe_admin\\node_modules\\vue-image-crop-upload\\upload-2.vue","mtime":1698226187333},{"path":"D:\\Desktop\\Django\\fe_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698226179476},{"path":"D:\\Desktop\\Django\\fe_admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1698226187694},{"path":"D:\\Desktop\\Django\\fe_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698226179476},{"path":"D:\\Desktop\\Django\\fe_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1698226183228}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}